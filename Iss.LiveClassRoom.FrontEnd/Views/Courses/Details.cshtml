@using Iss.LiveClassRoom.FrontEnd.Models
@using Iss.LiveClassRoom.Core.Models;

@model CourseViewModel


@{
    ViewBag.Title = "Details";
}

<nav class="toolbar top-buffer">
    <div class="row">
        <h2 class="col-sm-7 col-xs-12">@ViewBag.Title</h2>
        <div class="col-sm-5 col-xs-12 toolbar-btn">
            <div class="btn-group" style="line-height:0;">
                <button type="button" class="btn btn-warning dropdown-toggle" data-toggle="dropdown">
                    <span class="glyphicon glyphicon-cog"></span> Options <span class="caret"></span>
                </button>
                <ul class="dropdown-menu text-left" role="menu">
                    @if (Model.Entity.HasAccess(User, Permissions.Edit))
                    {
                        <li>@Html.ActionLink("Edit", "Edit", new { id = Model.Id })</li>
                    }
                    <li>@Html.ActionLink("Back to Menu", "Index")</li>
                    @if (Model.Entity.HasAccess(User, Permissions.PartialEdit))
                    {
                        <li class="divider"></li>
                        <li>@Html.ActionLink("Create Quiz", "Create", "Quizs", new { id = Model.Id }, null)</li>
                    }
                </ul>
            </div>
        </div>
    </div>
</nav>


<div class="detailbody">
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            Instructor
        </dt>

        <dd>
            @ViewBag.InstructorName
        </dd>

        <dt>
            Maximum student number
        </dt>

        <dd>
            @Html.DisplayFor(model => model.MaxStudentNumber)

        <dt>
            Current student number
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CurrentStudentNumber)
        </dd>
    </dl>
</div>




<div class="row">
    <div class="col-md-12">
        <div class="top-buffer">
            <!-- Nav tabs -->
            <ul class="nav nav-tabs tab-details" role="tablist">
                @if (Model.Entity.HasAccess(User, Permissions.Edit))
                {
                    <li role="presentation"><a href="#students" aria-controls="students" role="tab" data-toggle="tab">Students</a></li>
                }
                <li role="presentation"><a href="#quizzes" aria-controls="quizzes" role="tab" data-toggle="tab">Quizzes</a></li>
                <li role="presentation"><a href="#topics" aria-controls="topics" role="tab" data-toggle="tab">Topics</a></li>
                <li role="presentation"><a href="#videos" aria-controls="videos" role="tab" data-toggle="tab">Videos</a></li>
                @if (User.IsInRole("Instructor"))
                {
                    <li role="presentation"><a href="#enrollments" aria-controls="enrollments" role="tab" data-toggle="tab">Enrollment requests</a></li>
                }
             </ul>

            <div role="tabpanel">
                <div class="tab-content">
                    @{ 
                        var studentsNav = new GirdNavViewModel<User>
                        {
                            CreateUrl = Url.Action("AssignStudent", "Courses", new { id = Model.Id }),
                            Title = "Students in this course",
                            IsPartial = true,
                            GridName = "Grid" + nameof(Student),
                            List = Model.Students.AsQueryable()
                        };
                    }
@if (Model.Entity.HasAccess(User, Permissions.Edit))
{
                    <div role="tabpanel" class="tab-pane" id="students">
                        @{
                            Html.RenderPartial("~/Views/Shared/_PartialGridNav.cshtml", studentsNav);
                            Html.RenderPartial("~/Views/Users/_PartialIndex.cshtml", studentsNav);
                        }
                    </div>
}
                    <div role="tabpanel" class="tab-pane" id="quizzes">
                        @{
                            var quizUrl = Url.Action("Create", "Quizs", new { id = Model.Id });
                            var quizzesNav = new GirdNavViewModel<Quiz>
                            {
                                CreateUrl = Model.Entity.HasAccess(User, Permissions.PartialEdit) ? quizUrl : null,
                                Title = "Quizs",
                                IsPartial = true,
                                GridName = "Grid" + nameof(Quiz),
                                List = Model.Quizzes.AsQueryable()
                            };
                            Html.RenderPartial("~/Views/Shared/_PartialGridNav.cshtml", quizzesNav);
                            Html.RenderPartial("~/Views/Quizs/_PartialIndex.cshtml", quizzesNav);
                        }
                    </div>
                    <div role="tabpanel" class="tab-pane" id="topics">
                        @{
                            var topicsUrl = Url.Action("Create", "Topics", new { id = Model.Id });
                            var topicsNav = new GirdNavViewModel<Topic>
                            {
                                CreateUrl = Model.Entity.HasAccess(User, Permissions.PartialEdit) ? topicsUrl : null,
                                Title = "Topics",
                                IsPartial = true,
                                GridName = "Grid" + nameof(Topic),
                                List = Model.Topics.AsQueryable()
                            };
                            Html.RenderPartial("~/Views/Shared/_PartialGridNav.cshtml", topicsNav);
                            Html.RenderPartial("~/Views/Topics/_PartialIndex.cshtml", topicsNav);
                        }
                    </div>
                    <div role="tabpanel" class="tab-pane" id="videos">
                        @{
                            var videosUrl = Url.Action("Create", "Videos", new { id = Model.Id });
                            var videosNav = new GirdNavViewModel<Video>
                            {
                                CreateUrl = Model.Entity.HasAccess(User, Permissions.PartialEdit) ? videosUrl : null,
                                Title = "Videos",
                                IsPartial = true,
                                GridName = "Grid" + nameof(Video),
                                List = Model.Videos.AsQueryable()
                            };
                            Html.RenderPartial("~/Views/Shared/_PartialGridNav.cshtml", videosNav);
                            Html.RenderPartial("~/Views/Videos/_PartialIndex.cshtml", videosNav);
                        }
                    </div>
@if (User.IsInRole("Instructor"))
{
    <div role="tabpanel" class="tab-pane" id="enrollments">
        <div class="panel-title">New enrollment requests.</div>
        <table class="table">
            <tr>
                <th>Student Name</th>
                <th>Student email</th>
                <th>Operation</th>
            </tr>
            @{
                foreach (var item in ViewBag.enrollRequests)
                {
                    <tr>
                        <td>@item.Student.Name</td>
                        <td>@item.Student.Email</td>
                        <td>
                            @Html.ActionLink("Accept", "Accept", new { courseId = Model.Id, studentId = item.Student.Id }) |
                            @Html.ActionLink("Reject", "Reject", new { courseId = Model.Id, studentId = item.Student.Id })
                        </td>
                    </tr>
                }
            }
        </table>
    </div>
}

                </div>
            </div>
        </div>
    </div>
</div>

@section BodyFoot {
    @{
        if (Model.Entity.HasAccess(User, Permissions.Edit)) {
            Html.RenderPartial("_PartialModals", studentsNav);
        }
        Html.RenderPartial("_PartialModals", quizzesNav);
        Html.RenderPartial("_PartialModals", topicsNav);
        Html.RenderPartial("_PartialModals", videosNav);
    }
}
@section Scripts {
    @{Html.RenderPartial("~/Views/Shared/_PartialGridScript.cshtml", null);}
    <script>
        function deleteSucess() {
            location.reload();
        }
    </script>
}