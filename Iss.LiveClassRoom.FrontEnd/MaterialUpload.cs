//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="fileupload")]
public interface fileupload
{
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/fileupload/ReceiveUploadMessage")]
    void ReceiveUploadMessage(string InstructorId, string VideoId);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/fileupload/ReceiveUploadMessage")]
    System.Threading.Tasks.Task ReceiveUploadMessageAsync(string InstructorId, string VideoId);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/fileupload/ReceiveAcceptOrNot")]
    void ReceiveAcceptOrNot(bool IsAccept, string VideoId, string AdminId, string comment);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/fileupload/ReceiveAcceptOrNot")]
    System.Threading.Tasks.Task ReceiveAcceptOrNotAsync(bool IsAccept, string VideoId, string AdminId, string comment);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface fileuploadChannel : fileupload, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class fileuploadClient : System.ServiceModel.ClientBase<fileupload>, fileupload
{
    
    public fileuploadClient()
    {
    }
    
    public fileuploadClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public fileuploadClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public fileuploadClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public fileuploadClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public void ReceiveUploadMessage(string InstructorId, string VideoId)
    {
        base.Channel.ReceiveUploadMessage(InstructorId, VideoId);
    }
    
    public System.Threading.Tasks.Task ReceiveUploadMessageAsync(string InstructorId, string VideoId)
    {
        return base.Channel.ReceiveUploadMessageAsync(InstructorId, VideoId);
    }
    
    public void ReceiveAcceptOrNot(bool IsAccept, string VideoId, string AdminId, string comment)
    {
        base.Channel.ReceiveAcceptOrNot(IsAccept, VideoId, AdminId, comment);
    }
    
    public System.Threading.Tasks.Task ReceiveAcceptOrNotAsync(bool IsAccept, string VideoId, string AdminId, string comment)
    {
        return base.Channel.ReceiveAcceptOrNotAsync(IsAccept, VideoId, AdminId, comment);
    }
}
